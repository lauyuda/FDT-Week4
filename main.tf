data "http" "my_public_ip" {
  url = "https://ifconfig.co/json"
  request_headers = {
    Accept = "application/json"
  }
}

locals {
  ifconfig_co_json = jsondecode(data.http.my_public_ip.body)
}

output "my_ip_addr" {
  value = local.ifconfig_co_json.ip
}

# variable "public_key_location" {
#   description = "Public key location"
#   default = "/mnt/c/Users/lauyu/.ssh/id_rsa.pub"
# }

# resource "aws_key_pair" "ssh_key" {
#   key_name = "server-key"
#   public_key = "${file(var.public_key_location)}"
# }

variable "generated_key_name" {
  type        = string
  default     = "devtool-week4-key"
  description = "Key-pair generated by Terraform"
}

resource "tls_private_key" "dev_key" {
  algorithm = "RSA"
  rsa_bits  = 4096
}

resource "aws_key_pair" "generated_key" {
  key_name = var.generated_key_name
  public_key = tls_private_key.dev_key.public_key_openssh

  provisioner "local-exec" {
    command = <<-EOT
      echo '${tls_private_key.dev_key.private_key_pem}' > ./'${var.generated_key_name}'.pem
      chmod 400 ./'${var.generated_key_name}'.pem
    EOT
  }
}

resource "aws_security_group" "allow_ssh" {
  name        = "allow_ssh"
  description = "Allow inbound SSH traffic from my IP"

  ingress {
      description      = "SSH"
      from_port        = 22
      to_port          = 22
      protocol         = "tcp"
      cidr_blocks      = ["${local.ifconfig_co_json.ip}/32"]
    #   cidr_blocks = "${data.external.public_ip.result.ip}/32"
    }
  
  egress {
      from_port        = 0
      to_port          = 0
      protocol         = "-1"
      cidr_blocks      = ["0.0.0.0/0"]
    }

  tags = {
    Name = "allow_ssh"
  }
}

resource "aws_instance" "devtoolWeek4Instance" {
  ami                    = "ami-0f511ead81ccde020"
  instance_type          = "t2.micro"

#   key_name = "${aws_key_pair.ssh_key.key_name}"
  key_name = "${aws_key_pair.generated_key.key_name}"
  vpc_security_group_ids = ["${aws_security_group.allow_ssh.id}"]

  tags = {
    Name = "devtool-week4"
  }
}